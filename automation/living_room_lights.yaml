##############################################################################
###  Detect when lights are turned on and adjust them accordingly based on time.
###  Based on code by @JesseWebDotCom
##############################################################################


- alias: auto adjust light brightness living room
  trigger:
    - platform: event
      event_type: state_changed
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family
        state: 'home'
      - condition: template
        value_template: "{{ trigger.event.data is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.entity_id is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.entity_id.split('.')[0] == 'light' }}"
      - condition: template
        value_template: "{{ trigger.event.data.new_state.state == 'on' }}"
      - condition: template
        value_template: "{{ trigger.event.data.old_state.state == 'off' }}"
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ trigger.event.data.entity_id.split('_')[0] == 'light.zone' }}"
          # - condition: template
          #   value_template: "{{ trigger.event.data.entity_id.split('_')[0] == 'light.bedroom' }}"
          # - condition: template
          #   value_template: "{{ trigger.event.data.entity_id.split('_')[1] == 'bedside' }}"
          - condition: template
            value_template: "{{ trigger.event.data.entity_id.split('_')[0] == 'light.living' }}"
#    - condition: template
#      value_template: "{{ trigger.event.data.entity_id.split('_')[1] != 'screensaver' }}"

  action:
    - service: light.turn_on
      data_template:
        entity_id: "{{ trigger.event.data.entity_id }}"
        brightness: >
          {% set hour=states("sensor.time").split(':')[0] | int %}
            {%- if hour >= 5 and hour < 8  -%}
            {{ ( 80 // (states.sensor.count_living_room_lights.state | default(1) | int) |int ) }}
          {%- elif hour >= 8 and hour <20  -%}
            {{ ( 255 // (states.sensor.count_living_room_lights.state | default(1) | int) |int ) }}
          {%- elif hour >= 20 and hour <24  -%}
            {{ ( 80 // (states.sensor.count_living_room_lights.state | default(1) | int) |int ) }}
          {%- else -%}
            {{ ( 15 // (states.sensor.count_living_room_lights.state | default(1) | int) |int ) }}
          {%- endif %}

##############################################################################
###  Maintain Brightness
##############################################################################
##############################################################################
#		As coded by @Skalavala and helped to completion by @Dale3h
#		Allows a room's brightness levels to be maintained,
#		regardless of number of lights turned on
##############################################################################


- alias: Maintain Brightness Bedroom
  trigger:
    - platform: state
      entity_id: light.bedroom_main_light
    - platform: state
      entity_id: light.jack_bedside_light
    - platform: state
      entity_id: light.lara_bedside_light
  action:
    - service_template: >-
        {% macro getlight_count() %}
          {% set count = 0 %}
          {% if is_state('light.bedroom_main_light', 'on') %}
            {% set count = count + 3 %}
          {% endif %}
          {% if is_state('light.jack_bedside_light', 'on') %}
            {% set count = count + 1 %}
          {% endif %}
          {% if is_state('light.lara_bedside_light', 'on') %}
            {% set count = count + 1 %}
          {% endif %}
          {{ count }}
        {% endmacro %}

        {% set count = getlight_count() %}
        {% if count == 0 %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}

#      data_template:
#        entity_id: >-
#          {% set comma = joiner() %}
#          {%- if is_state('light.bedroom_main_light', 'on') -%}
#            {{- comma() -}}
#            light.bedroom_main_light
#          {%- endif -%}
#          {%- if is_state('light.jack_bedside_light', 'on') -%}
#            {{- comma() -}}
#            light.jack_bedside_light
#          {%- endif -%}
#          {%- if is_state('light.lara_bedside_light', 'on') -%}
#            {{- comma() -}}
#            light.lara_bedside_light
#          {%- endif -%}

      data_template:
        entity_id: >-
          {% set lights = [
          	'light.bedroom_main_light',
            'light.jack_bedside_light',
            'light.lara_bedside_light'
          ] %}
          {% set comma = joiner(',') %}
          {%- for light in lights if is_state(light, 'on') -%}
            {{ comma() }}{{ light }}
          {%- endfor -%}

        brightness: >-
          {% macro getlight_count() %}
            {% set count = 0 %}
            {% if is_state('light.bedroom_main_light', 'on') %}
              {% set count = count + 3 %}
            {% endif %}
            {% if is_state('light.jack_bedside_light', 'on') %}
              {% set count = count + 1 %}
            {% endif %}
            {% if is_state('light.lara_bedside_light', 'on') %}
              {% set count = count + 1 %}
            {% endif %}
            {{ count }}
          {% endmacro %}

          {% set count = getlight_count()|int %}
          {% if count == 5 %}
            20
          {% elif count == 4 %}
            25
          {% elif count == 3 %}
            33
          {% elif count == 2 %}
            50
          {% elif count == 1 %}
            100
          {% else %}
            0
          {% endif %}
